openapi: 3.0.0
info:
  title: mega_back endpoints documentation
  description: "Routes, requests responses and database operation"
  version: "1.1"
servers:
- url: https://virtserver.swaggerhub.com/VINIDSB580/mega_back/1.1
  description: SwaggerHub API Auto Mocking
- url: http://localhost:3001
paths:
  /verMedicamento:
    get:
      summary: Returns the information about a single product
      responses:
        '200':
          description: products information sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  medicine_data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        code:
                          type: string
                        category:
                          type: string
                        description:
                          type: string
                        unit_price:
                          type: number
                        needs_recipe:
                          type: boolean
                        image_path:
                          type: string
                        on_stock:
                          type: string
        '400':
          description: Error processing request
        '404':
          description: Product not found
        '500':
          description: server internal error

  /listarMedicamentos:
    get:
      summary: Returs a list of products and it's basic information.
      responses:
        '200':
          description: products list sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  medicineList:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        code:
                          type: string
                        category:
                          type: string
                        description:
                          type: string
                        unit_price:
                          type: number
                        image_path:
                          type: string
        '500':
          description: server internal error

  /cadastrarMedicamento:
    post:
      summary: Saves a product on database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medName:
                  type: string
                medCode:
                  type: number
                medCategory:
                  type: string
                medDescription:
                  type: string
                medUnitPrice:
                  type: number
                amountOnStock:
                  type: number
                managerWhoAdded:
                  type: number #manager id
                imagePath:
                  type: string
                needRecipe:
                  type: boolean
      responses:
        '201':
          description: product has been added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Returns error message like invalid data, invalid sintax etc
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: server internal error


  /cadastrarCli:
    post:
      summary: Validate data and register a new client account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cpf:
                  type: string
                email:
                  type: string
                password:
                  type: string
                passwordRepeat:
                  type: string
                rg:
                  type: integer
                address:
                  type: string
                phone:
                  type: integer
      responses:
        "201":
          description: client registration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                
        "400":
          description: some data may be invalid, wrong sintax, characters, size etc
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: registration unauthorized, user data alredy exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: server internal error

  /cadastrarAdm:
    post:
      summary: Validate data and register a manager
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                passwordRepeat:
                  type: string
      responses:
        "201":
          description: manager registration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: some data may be invalid, wrong sintax, characters, size etc
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: unauthorized data, alredy exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: server internal error
  
  /fazerLogin:
    post:
      summary: Checks the credentials and respond with user data if success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "202":
          description: client login accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  is_adm:
                    type: boolean
                  email:
                    type: string
                  name:
                    type: string
                  cpf:
                    type: string
                  rg:
                    type: string
                  phone_number:
                    type: number
                  address:
                    type: string
        "209":
          description: manager login accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  is_adm:
                    type: boolean
                  email:
                    type: string
                  name:
                    type: string
        "400":
          description: "data validation error, not an email, not allowed characters,\
            \ etc"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: incorrect  password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: server internal error
